-- Criar sequÃªncias para as tabelas
CREATE SEQUENCE IF NOT EXISTS public."Movies_Id_seq" START WITH 1 INCREMENT BY 1 NO MINVALUE NO MAXVALUE CACHE 1;
CREATE SEQUENCE IF NOT EXISTS public."Users_Id_seq" START WITH 1 INCREMENT BY 1 NO MINVALUE NO MAXVALUE CACHE 1;
CREATE SEQUENCE IF NOT EXISTS public."UserFavorites_Id_seq" START WITH 1 INCREMENT BY 1 NO MINVALUE NO MAXVALUE CACHE 1;
CREATE SEQUENCE IF NOT EXISTS public."UserRatings_Id_seq" START WITH 1 INCREMENT BY 1 NO MINVALUE NO MAXVALUE CACHE 1;

-- Tabela Users (deve ser criada primeiro pois outras dependem dela)
CREATE TABLE IF NOT EXISTS public."Users"
(
    "Id" integer NOT NULL DEFAULT nextval('public."Users_Id_seq"'::regclass),
    "Name" character varying(100) NOT NULL,
    "Email" character varying(200) NOT NULL,
    "PasswordHash" text NOT NULL,
    "CreatedAt" timestamp without time zone NOT NULL DEFAULT CURRENT_TIMESTAMP,
    "LastLogin" timestamp without time zone,
    "DeletionDate" timestamp without time zone,
    CONSTRAINT "Users_pkey" PRIMARY KEY ("Id"),
    CONSTRAINT "Users_Email_key" UNIQUE ("Email")
)
TABLESPACE pg_default;

ALTER TABLE IF EXISTS public."Users" OWNER to postgres;

-- Tabela Movies
CREATE TABLE IF NOT EXISTS public."Movies"
(
    "Id" integer NOT NULL DEFAULT nextval('public."Movies_Id_seq"'::regclass),
    "TMDbId" integer NOT NULL,
    "Title" character varying(255) NOT NULL,
    "Overview" text,
    "PosterPath" character varying(500),
    "VoteAverage" double precision,
    "VoteCount" integer,
    "ReleaseDate" timestamp without time zone,
    "LastUpdated" timestamp without time zone DEFAULT CURRENT_TIMESTAMP,
    CONSTRAINT "Movies_pkey" PRIMARY KEY ("Id"),
    CONSTRAINT "Movies_TMDbId_key" UNIQUE ("TMDbId")
)
TABLESPACE pg_default;

ALTER TABLE IF EXISTS public."Movies" OWNER to postgres;

-- Tabela UserFavorites
CREATE TABLE IF NOT EXISTS public."UserFavorites"
(
    "Id" integer NOT NULL DEFAULT nextval('public."UserFavorites_Id_seq"'::regclass),
    "UserId" integer NOT NULL,
    "MovieId" integer NOT NULL,
    "CreatedAt" timestamp without time zone NOT NULL DEFAULT CURRENT_TIMESTAMP,
    "DeletionDate" timestamp without time zone,
    CONSTRAINT "UserFavorites_pkey" PRIMARY KEY ("Id"),
    CONSTRAINT "FK_UserFavorites_Movies" FOREIGN KEY ("MovieId")
        REFERENCES public."Movies" ("Id") ON DELETE CASCADE,
    CONSTRAINT "FK_UserFavorites_Users" FOREIGN KEY ("UserId")
        REFERENCES public."Users" ("Id") ON DELETE CASCADE
)
TABLESPACE pg_default;

ALTER TABLE IF EXISTS public."UserFavorites" OWNER to postgres;

-- Tabela UserRatings
CREATE TABLE IF NOT EXISTS public."UserRatings"
(
    "Id" integer NOT NULL DEFAULT nextval('public."UserRatings_Id_seq"'::regclass),
    "UserId" integer NOT NULL,
    "MovieId" integer NOT NULL,
    "Rating" integer NOT NULL CHECK ("Rating" >= 1 AND "Rating" <= 10),
    "Comment" text,
    "CreatedAt" timestamp without time zone NOT NULL DEFAULT CURRENT_TIMESTAMP,
    "UpdatedAt" timestamp without time zone,
    "DeletionDate" timestamp without time zone,
    "LastActivityDate" timestamp without time zone,
    CONSTRAINT "UserRatings_pkey" PRIMARY KEY ("Id"),
    CONSTRAINT "FK_UserRatings_Movies" FOREIGN KEY ("MovieId")
        REFERENCES public."Movies" ("Id") ON DELETE CASCADE,
    CONSTRAINT "FK_UserRatings_Users" FOREIGN KEY ("UserId")
        REFERENCES public."Users" ("Id") ON DELETE CASCADE
)
TABLESPACE pg_default;

ALTER TABLE IF EXISTS public."UserRatings" OWNER to postgres;