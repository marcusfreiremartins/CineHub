@model CineHub.Models.ViewModels.RateMovieViewModel
@{
    ViewData["Title"] = $"Avaliar - {Model.MovieTitle}";
}

<div class="row justify-content-center">
    <div class="col-md-8">
        <div class="card shadow">
            <div class="card-header bg-warning text-dark">
                <h3 class="mb-0">⭐ Avaliar Filme</h3>
            </div>
            <div class="card-body">
                <div class="row">
                    <div class="col-md-3">
                        @if (!string.IsNullOrEmpty(Model.MoviePosterPath))
                        {
                            <img src="@Model.ImageBaseUrl@Model.MoviePosterPath"
                                 class="img-fluid rounded shadow" alt="@Model.MovieTitle">
                        }
                        else
                        {
                            <div class="bg-light text-center rounded d-flex align-items-center justify-content-center"
                                 style="height: 300px;">
                                <span class="fs-1 text-muted">🎬</span>
                            </div>
                        }
                    </div>
                    <div class="col-md-9">
                        <h4>@Model.MovieTitle</h4>

                        <form asp-action="RateMovie" method="post">
                            <input type="hidden" asp-for="MovieId" />
                            <input type="hidden" asp-for="MovieTitle" />
                            <input type="hidden" asp-for="MoviePosterPath" />
                            <input type="hidden" asp-for="ExistingRatingId" />

                            <div asp-validation-summary="ModelOnly" class="text-danger mb-3"></div>

                            <div class="mb-4">
                                <label asp-for="Rating" class="form-label h5">Sua Nota (1-10)</label>
                                <div class="rating-container mb-2">
                                    @for (int i = 1; i <= 10; i++)
                                    {
                                        <label class="rating-badge">
                                            <input type="radio" asp-for="Rating" value="@i" />
                                            <span class="badge bg-secondary fs-6" data-value="@i">@i</span>
                                        </label>
                                    }
                                </div>
                                <span asp-validation-for="Rating" class="text-danger"></span>
                                <div class="form-text">Clique nos números para dar sua nota</div>
                            </div>

                            <div class="mb-4">
                                <label asp-for="Comment" class="form-label">Comentário (Opcional)</label>
                                <textarea asp-for="Comment" class="form-control" rows="4"
                                          placeholder="Conte o que achou do filme..."></textarea>
                                <span asp-validation-for="Comment" class="text-danger"></span>
                            </div>

                            <div class="mb-4">
                                <div class="form-check">
                                    <input asp-for="IsFavorite" class="form-check-input" />
                                    <label asp-for="IsFavorite" class="form-check-label">
                                        ❤️ Adicionar aos meus favoritos
                                    </label>
                                </div>
                            </div>

                            <div class="d-flex gap-2">
                                <button type="submit" class="btn btn-warning btn-lg">
                                    @if (Model.ExistingRatingId.HasValue)
                                    {
                                        <span>📝 Atualizar Avaliação</span>
                                    }
                                    else
                                    {
                                        <span>⭐ Avaliar Filme</span>
                                    }
                                </button>
                                <a asp-controller="Movies" asp-action="Details" asp-route-id="@Model.MovieId"
                                   class="btn btn-secondary btn-lg">
                                    Cancelar
                                </a>
                            </div>
                        </form>
                    </div>
                </div>
            </div>
        </div>
    </div>
</div>

<style>
    .rating-container {
        display: flex;
        gap: 8px;
        flex-wrap: wrap;
    }

    .rating-badge {
        cursor: pointer;
        transition: transform 0.2s ease;
    }

    .rating-badge:hover {
        transform: scale(1.1);
    }

    .rating-badge input {
        display: none;
    }

    .rating-badge .badge {
        transition: all 0.3s ease;
        user-select: none;
        min-width: 35px;
        text-align: center;
        border: 2px solid transparent;
    }

    .rating-badge .badge:hover {
        background-color: #0d6efd !important;
        border-color: #0d6efd;
        box-shadow: 0 0 10px rgba(13, 110, 253, 0.4);
    }

    .rating-badge input:checked + .badge {
        background-color: #0d6efd !important;
        border-color: #0d6efd;
        box-shadow: 0 0 15px rgba(13, 110, 253, 0.6);
    }

    /* Efeito de preenchimento progressivo ao hover */
    .rating-container:hover .rating-badge .badge {
        background-color: #6c757d !important;
    }

    .rating-container .rating-badge:hover .badge,
    .rating-container .rating-badge:hover ~ .rating-badge .badge {
        background-color: #6c757d !important;
    }

    .rating-container .rating-badge:hover .badge {
        background-color: #0d6efd !important;
    }

    /* Preenchimento dos badges anteriores ao hover */
    .rating-badge:hover ~ .rating-badge .badge {
        background-color: #6c757d !important;
    }

    /* Responsive */
    @@media (max-width: 576px) {
        .rating-container {
            gap: 5px;
        }
        
        .rating-badge .badge {
            min-width: 30px;
            font-size: 0.875rem;
        }
    }
</style>

<script>
    document.addEventListener('DOMContentLoaded', function () {
        const badges = document.querySelectorAll('.rating-badge');
        const container = document.querySelector('.rating-container');
        const currentRating = @Model.Rating;

        function highlightBadges(rating) {
            badges.forEach((badgeLabel, index) => {
                const badge = badgeLabel.querySelector('.badge');
                if (index < rating) {
                    badge.classList.remove('bg-secondary');
                    badge.classList.add('bg-primary');
                } else {
                    badge.classList.remove('bg-primary');
                    badge.classList.add('bg-secondary');
                }
            });
        }

        // Destacar a nota atual
        highlightBadges(currentRating);

        // Efeito hover
        badges.forEach((badgeLabel, index) => {
            badgeLabel.addEventListener('mouseenter', () => {
                highlightBadges(index + 1);
            });

            badgeLabel.addEventListener('click', () => {
                const input = badgeLabel.querySelector('input');
                input.checked = true;
                highlightBadges(index + 1);
            });
        });

        // Restaurar ao sair do container
        container.addEventListener('mouseleave', () => {
            const checkedInput = document.querySelector('input[name="Rating"]:checked');
            const checkedValue = checkedInput ? parseInt(checkedInput.value) : currentRating;
            highlightBadges(checkedValue);
        });
    });
</script>

@section Scripts {
    <partial name="_ValidationScriptsPartial" />
}